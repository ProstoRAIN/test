{"version":3,"sources":["panels/Home.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","title","size","level","onClick","data-to","App","useState","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","a","bridge","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"goBA+CeA,EAvCF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,GAAP,EAAWC,YAAX,OACZ,kBAAC,IAAD,CAAOF,GAAIA,GACV,kBAAC,IAAD,wFAEA,kBAAC,IAAD,CAAOG,MAAM,sBACZ,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAQC,KAAK,KAAKC,MAAM,IAAIC,QAASL,EAAIM,UAAQ,gBAAjD,gEAGA,kBAAC,IAAD,CAAQH,KAAK,KAAKC,MAAM,IAAIC,QAASL,EAAIM,UAAQ,cAAjD,oDAGA,kBAAC,IAAD,CAAQH,KAAK,KAAKC,MAAM,IAAIC,QAASL,EAAIM,UAAQ,cAAjD,oDAGA,kBAAC,IAAD,CAAQH,KAAK,KAAKC,MAAM,IAAIC,QAASL,EAAIM,UAAQ,oBAAjD,wFAGA,kBAAC,IAAD,CAAQH,KAAK,KAAKC,MAAM,KAAKC,QAASL,EAAIM,UAAQ,iBAAlD,uFCcWC,EAhCH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEVP,EAFU,KAEGU,EAFH,OAGWH,mBAAS,kBAAC,IAAD,CAAeL,KAAK,WAHxC,mBAGVS,EAHU,KAGFC,EAHE,KAKjBC,qBAAU,WAAM,4CAQf,4BAAAC,EAAA,sEACoBC,IAAOC,KAAK,uBADhC,OACOC,EADP,OAECP,EAAQO,GACRL,EAAU,MAHX,4CARe,sBACfG,IAAOG,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACnC,GAAa,yBAATD,EAAiC,CACpC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OALzB,mCAafQ,KACE,IAMH,OACC,kBAAC,IAAD,CAAMtB,YAAaA,EAAaG,OAAQA,GACvC,kBAAC,EAAD,CAAMb,GAAG,OAAOE,YAAaA,EAAaD,GANjC,SAAAgC,GACVtB,EAAesB,EAAEC,cAAcC,QAAQC,SCtBzCnB,IAAOC,KAAK,gBAEZmB,IAASC,OAAO,kBAAC,EAAD,MAASb,SAASc,eAAe,W","file":"static/js/main.ad697cb0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Формулы физики</PanelHeader>\n\t\t\n\t\t<Group title=\"Navigation Example\">\n\t\t\t<Div>\t\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"KinematikaFo\">\n\t\t\t\t\tКинематика\n\t\t\t\t</Button>\n\t\t\t\t<Button size=\"xl\" level=\"4\" onClick={go} data-to=\"MehanikaFo\">\n\t\t\t\t\tМеханика\n\t\t\t\t</Button>\n\t\t\t\t<Button size=\"xl\" level=\"6\" onClick={go} data-to=\"DinamikaFo\">\n\t\t\t\t\tДинамина\n\t\t\t\t</Button>\n\t\t\t\t<Button size=\"xl\" level=\"8\" onClick={go} data-to=\"ElectrostatikaFo\">\n\t\t\t\t\tЭлектростатика\n\t\t\t\t</Button>\n\t\t\t\t<Button size=\"xl\" level=\"10\" onClick={go} data-to=\"PostoyanTokFo\">\n\t\t\t\t\t Постоянный ток\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}